{"version":3,"sources":["Store.js","DataElement.js","Info.js","ContactsDropdown.js","App.js","index.js"],"names":["StoreContext","createContext","useStoreState","useContext","state","stateReducer","oldState","action","console","log","value","type","secret","frontContext","children","useReducer","dispatch","useEffect","URL","document","location","href","searchParams","get","subscription","contextUpdates","subscribe","newContext","unsubscribe","storeContextValue","useMemo","Provider","DateElement","parsedDate","DateTime","fromISO","invalid","toFormat","DataElement","Date","toString","toISOString","Array","isArray","find","e","join","Info","contactKey","useState","isLoading","setLoadingState","info","setInfo","error","setError","index","setIndex","changeIndex","change","length","newIndex","uri","encodeURIComponent","emptyInfo","fetch","method","mode","then","r","ok","status","Error","statusText","json","response","Object","assign","data","catch","err","message","finally","className","onClick","entries","map","idx","key","ContactsDropdown","contacts","currentContact","setContact","onChange","target","c","Application","setContacts","conversation","setCurrentContact","listMessages","allMessagesContacts","results","m","to","t","handle","from","cc","bcc","b","flat","filter","self","indexOf","recipient","basename","process","path","App","ReactDOM","render","StrictMode","Store","getElementById"],"mappings":"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","file":"static/js/main.0b92a137.chunk.js","sourcesContent":["import React, { createContext, useContext, useReducer, useEffect, useMemo } from 'react';\nimport { contextUpdates } from '@frontapp/plugin-sdk';\n\nexport const StoreContext = createContext(null);\n\nexport const useStoreState = () => {\n  const { state } = useContext(StoreContext);\n  return state;\n};\n\nexport const useStoreDispatch = () => {\n  const { dispatch } = useContext(StoreContext);\n  return dispatch;\n};\n\nconst stateReducer = (oldState, action) => {\n  console.log(action, action.value);\n\n  if (action.type === 'secret_set')\n    return {...oldState, secret: action.value};\n\n  if (action.type === 'new_context_received')\n    return {...oldState, frontContext: action.value};\n\n  return oldState;\n};\n\nexport default ({ children }) => {\n  const [state, dispatch] = useReducer(stateReducer, null);\n  \n  useEffect(() => {\n    // The auth_secret is used for authentication of the plugin\n    const secret = (new URL(document.location.href)).searchParams.get('auth_secret');\n    console.log(`Secret is ${secret}`);\n\n    dispatch({type: 'secret_set', value: secret});\n\n    const subscription = contextUpdates.subscribe(newContext => dispatch({type: 'new_context_received', value: newContext}));\n    return () => subscription.unsubscribe();\n  }, []);\n\n  const storeContextValue = useMemo(() => ({\n    state,\n    dispatch\n  }), [state, dispatch]);\n\n  if (!state?.frontContext)\n    return null;\n\n  return <StoreContext.Provider value={storeContextValue}>\n    {children}\n  </StoreContext.Provider>;\n};","import React from 'react';\nimport { DateTime } from 'luxon';\n\nconst DateElement = ({ value }) => { \n  const parsedDate = DateTime.fromISO(value);\n\n  if (parsedDate.invalid)\n    return <em>Invalid date</em>;\n  \n  return parsedDate.toFormat('D');\n};\n\nconst DataElement = ({ value }) => {\n  if (new Date(value).toString() !== 'Invalid Date' && new Date(value).toISOString() === value)\n    return <DateElement value={value} />;\n\n  if (Array.isArray(value) && !value.find(e => !!e))\n    return <>N/A</>;\n\n  if (Array.isArray(value))\n    return <>{value.join(', ')}</>;\n  \n  return <>{value || 'N/A'}</>;\n};\n\nexport default DataElement;","import React, { useState, useEffect } from 'react';\nimport { useStoreState } from './Store';\nimport DataElement from './DataElement';\n\nconst Info = ({ contactKey }) => {\n  const { secret } = useStoreState();\n\n  const [isLoading, setLoadingState] = useState(true);\n  const [info, setInfo] = useState({});\n  const [error, setError] = useState(null);\n  const [index, setIndex] = useState(0);\n\n  const changeIndex = (change, length) => {\n    let newIndex = index + change;\n    if (newIndex === -1)\n      newIndex = length - 1;\n\n    if (newIndex === length)\n      newIndex = 0;\n\n    return setIndex(newIndex);\n  };\n\n  useEffect(() => {\n    if (info.contactKey === contactKey)\n      return;\n  \n    const uri = `/api/search?auth_secret=${secret}&contact_key=${encodeURIComponent(contactKey)}`;\n    const emptyInfo = {contactKey: contactKey};\n\n    setLoadingState(true);\n    setError(null);\n    setIndex(0);\n\n    fetch(`${uri}`, {\n      method: 'GET',\n      mode: 'cors'\n    })\n    .then(r => {\n      if (!r.ok && r.status !== 404)\n        throw Error(r.statusText);\n\n      if(r.status === 404)\n        return ({});\n\n      return r.json();\n    })\n    .then(response => setInfo(Object.assign(emptyInfo, {data: response.data})))\n    .catch((err) => {\n      setInfo(emptyInfo);\n      setError(err.message);\n    })\n    .finally(() => setLoadingState(false));\n  }, [info, contactKey, secret]);\n\n  if (isLoading)\n    return <div className=\"notice\">Loading...</div>;\n\n  if (error)\n    return <div className=\"notice error\">{error}</div>;\n\n  if (!info || !info.data)\n    return <div className=\"notice\">No record found.</div>;\n\n  return (\n    <div className=\"info\">\n      <div className=\"info-contact\">\n        <ul className=\"list-data\">\n          <div className=\"index-picker\">\n            <span className=\"index-picker-button\" onClick={() => changeIndex(-1, info.data.length)}>&lt;&lt;</span>\n            <span> {index + 1} / {info.data.length} </span>\n            <span className=\"index-picker-button\" onClick={() => changeIndex(1, info.data.length)}>&gt;&gt;</span>\n          </div>\n          {Object.entries(info.data[index]).map((e, idx) => <li key={idx}>\n            <div className=\"info-entry\">\n              <div className=\"info-label\">{e[0]}</div>\n              <div className=\"info-value\"><DataElement value={e[1]} /></div>\n            </div>\n          </li>)}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default Info;","import React from 'react';\n\nconst ContactsDropdown = ({ contacts, currentContact, setContact }) => {\n  if (!currentContact)\n    return <></>;\n\n  return (\n    <div className=\"select-container\">\n      <select className=\"select-contact\" value={currentContact} onChange={(e) => setContact(e.target.value)}>\n        {contacts.map(c => <option key={c}>{c}</option>)}\n      </select>\n      <i className=\"chevron-down\">⌄</i>\n    </div>\n  );\n}\n\nexport default ContactsDropdown;","import React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport { useStoreState } from './Store';\nimport Info from './Info';\nimport ContactsDropdown from './ContactsDropdown';\n\nconst Application = () => {\n  const [contacts, setContacts] = useState([]);\n  const { frontContext } = useStoreState();\n  const { type, conversation } = frontContext;\n  const [currentContact, setCurrentContact] = useState(null);\n\n  useEffect(() => {\n    if (!frontContext.listMessages)\n      return undefined;\n\n    frontContext.listMessages().then(r => {\n      const allMessagesContacts = r.results\n        .map(m => [...(m.to.map(t => t.handle)), m.from?.handle, ...(m.cc?.map(c => c.handle) || []), ...(m.bcc?.map(b => b.handle) || [])])\n        .flat()\n        .filter((value, index, self) => self.indexOf(value) === index);\n      \n      setCurrentContact(conversation?.recipient?.handle);\n      setContacts(allMessagesContacts);\n    });\n  }, [frontContext, conversation]);\n\n  return <div className=\"app\">\n    <Router basename={process.env.PUBLIC_URL}>\n      <Switch>\n        <Route path=\"/\">\n          { (type === 'singleConversation' && currentContact) ? (\n            <>\n              <ContactsDropdown contacts={contacts} currentContact={currentContact} setContact={setCurrentContact} />\n              <Info contactKey={currentContact} />\n            </>\n          ) : <div className=\"notice\">This plugin only works with conversations.</div> }\n        </Route>\n      </Switch>\n    </Router>\n  </div>;\n};\n\nexport default Application;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport StoreProvider from './Store';\nimport App from './App';\nimport './App.css';\n\nexport default App;\n\nReactDOM.render(\n  <React.StrictMode>\n    <StoreProvider>\n      <App />\n    </StoreProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}