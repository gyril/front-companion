{"version":3,"sources":["Store.js","DataElement.js","Info.js","ContactsDropdown.js","App.js","index.js"],"names":["StoreContext","createContext","useStoreState","useContext","state","stateReducer","oldState","action","console","log","value","type","secret","airtableKey","airtable_key","airtableBase","airtable_base","frontContext","children","useReducer","dispatch","useEffect","URL","document","location","href","searchParams","get","subscription","contextUpdates","subscribe","newContext","unsubscribe","storeContextValue","useMemo","Provider","DateElement","parsedDate","DateTime","fromISO","invalid","toFormat","DataElement","Date","toString","toISOString","Array","isArray","find","e","join","Info","contactKey","useState","isLoading","setLoadingState","info","setInfo","error","setError","uri","encodeURIComponent","emptyInfo","fetch","method","mode","then","r","ok","status","Error","statusText","json","response","Object","assign","data","catch","err","message","finally","className","entries","map","idx","key","ContactsDropdown","contacts","currentContact","setContact","onChange","target","c","Application","setContacts","conversation","setCurrentContact","listMessages","allMessagesContacts","results","m","to","t","handle","from","cc","bcc","b","flat","filter","index","self","indexOf","recipient","basename","process","path","App","ReactDOM","render","StrictMode","Store","getElementById"],"mappings":"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","file":"static/js/main.d811b9ae.chunk.js","sourcesContent":["import React, { createContext, useContext, useReducer, useEffect, useMemo } from 'react';\nimport { contextUpdates } from '@frontapp/plugin-sdk';\n\nexport const StoreContext = createContext(null);\n\nexport const useStoreState = () => {\n  const { state } = useContext(StoreContext);\n  return state;\n};\n\nexport const useStoreDispatch = () => {\n  const { dispatch } = useContext(StoreContext);\n  return dispatch;\n};\n\nconst stateReducer = (oldState, action) => {\n  console.log(action, action.value);\n\n  if (action.type === 'secret_set')\n    return {...oldState, secret: action.value};\n\n  if (action.type === 'airtable_credentials_set')\n    return {\n      ...oldState,\n      airtableKey: action.value.airtable_key,\n      airtableBase: action.value.airtable_base\n    };\n\n  if (action.type === 'new_context_received')\n    return {...oldState, frontContext: action.value};\n\n  return oldState;\n};\n\nexport default ({ children }) => {\n  const [state, dispatch] = useReducer(stateReducer, null);\n  \n  useEffect(() => {\n    // The auth_secret is used for authentication of the plugin\n    const secret = (new URL(document.location.href)).searchParams.get('auth_secret');\n    console.log(`Secret is ${secret}`);\n\n    dispatch({type: 'secret_set', value: secret});\n\n    // In the hosted version, users can provide their own Airtable key and base ID\n    const airtable_key = (new URL(document.location.href)).searchParams.get('airtable_key');\n    const airtable_base = (new URL(document.location.href)).searchParams.get('airtable_base');\n\n    if (airtable_key && airtable_base)\n      dispatch({type: 'airtable_credentials_set', value: {airtable_key, airtable_base}});\n\n    const subscription = contextUpdates.subscribe(newContext => dispatch({type: 'new_context_received', value: newContext}));\n    return () => subscription.unsubscribe();\n  }, []);\n\n  const storeContextValue = useMemo(() => ({\n    state,\n    dispatch\n  }), [state, dispatch]);\n\n  if (!state?.frontContext)\n    return null;\n\n  return <StoreContext.Provider value={storeContextValue}>\n    {children}\n  </StoreContext.Provider>;\n};","import React from 'react';\nimport { DateTime } from 'luxon';\n\nconst DateElement = ({ value }) => { \n  const parsedDate = DateTime.fromISO(value);\n\n  if (parsedDate.invalid)\n    return <em>Invalid date</em>;\n  \n  return parsedDate.toFormat('D');\n};\n\nconst DataElement = ({ value }) => {\n  if (new Date(value).toString() !== 'Invalid Date' && new Date(value).toISOString() === value)\n    return <DateElement value={value} />;\n\n  if (Array.isArray(value) && !value.find(e => !!e))\n    return <>N/A</>;\n\n  if (Array.isArray(value))\n    return <>{value.join(', ')}</>;\n  \n  return <>{value || 'N/A'}</>;\n};\n\nexport default DataElement;","import React, { useState, useEffect } from 'react';\nimport { useStoreState } from './Store';\nimport DataElement from './DataElement';\n\nconst Info = ({ contactKey }) => {\n  const { secret } = useStoreState();\n\n  const [isLoading, setLoadingState] = useState(true);\n  const [info, setInfo] = useState({});\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    if (info.contactKey === contactKey)\n      return;\n  \n    const uri = `/api/search?auth_secret=${secret}&contact_key=${encodeURIComponent(contactKey)}`;\n    const emptyInfo = {contactKey: contactKey};\n\n    setLoadingState(true);\n    setError(null);\n\n    fetch(`${uri}`, {\n      method: 'GET',\n      mode: 'cors'\n    })\n    .then(r => {\n      if (!r.ok && r.status !== 404)\n        throw Error(r.statusText);\n\n      if(r.status === 404)\n        return ({});\n\n      return r.json();\n    })\n    .then(response => setInfo(Object.assign(emptyInfo, {data: response.data})))\n    .catch((err) => {\n      setInfo(emptyInfo);\n      setError(err.message);\n    })\n    .finally(() => setLoadingState(false));\n  }, [info, contactKey, secret]);\n\n  if (isLoading)\n    return <div className=\"notice\">Loading...</div>;\n\n  if (error)\n    return <div className=\"notice error\">{error}</div>;\n\n  if (!info || !info.data)\n    return <div className=\"notice\">No record found.</div>;\n\n  return (\n    <div className=\"info\">\n      <div className=\"info-contact\">\n        <ul className=\"list-data\">\n          {Object.entries(info.data).map((e, idx) => <li key={idx}>\n            <div className=\"info-entry\">\n              <div className=\"info-label\">{e[0]}</div>\n              <div className=\"info-value\"><DataElement value={e[1]} /></div>\n            </div>\n          </li>)}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default Info;","import React from 'react';\n\nconst ContactsDropdown = ({ contacts, currentContact, setContact }) => {\n  if (!currentContact)\n    return <></>;\n\n  return (\n    <div className=\"select-container\">\n      <select className=\"select-contact\" value={currentContact} onChange={(e) => setContact(e.target.value)}>\n        {contacts.map(c => <option key={c}>{c}</option>)}\n      </select>\n      <i className=\"chevron-down\">⌄</i>\n    </div>\n  );\n}\n\nexport default ContactsDropdown;","import React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport { useStoreState } from './Store';\nimport Info from './Info';\nimport ContactsDropdown from './ContactsDropdown';\n\nconst Application = () => {\n  const [contacts, setContacts] = useState([]);\n  const { frontContext } = useStoreState();\n  const { type, conversation } = frontContext;\n  const [currentContact, setCurrentContact] = useState(null);\n\n  useEffect(() => {\n    if (!frontContext.listMessages)\n      return undefined;\n\n    frontContext.listMessages().then(r => {\n      const allMessagesContacts = r.results\n        .map(m => [...(m.to.map(t => t.handle)), m.from?.handle, ...(m.cc?.map(c => c.handle) || []), ...(m.bcc?.map(b => b.handle) || [])])\n        .flat()\n        .filter((value, index, self) => self.indexOf(value) === index);\n      \n      setCurrentContact(conversation?.recipient?.handle);\n      setContacts(allMessagesContacts);\n    });\n  }, [frontContext, conversation]);\n\n  return <div className=\"app\">\n    <Router basename={process.env.PUBLIC_URL}>\n      <Switch>\n        <Route path=\"/\">\n          { (type === 'singleConversation' && currentContact) ? (\n            <>\n              <ContactsDropdown contacts={contacts} currentContact={currentContact} setContact={setCurrentContact} />\n              <Info contactKey={currentContact} />\n            </>\n          ) : <div className=\"notice\">This plugin only works with conversations.</div> }\n        </Route>\n      </Switch>\n    </Router>\n  </div>;\n};\n\nexport default Application;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport StoreProvider from './Store';\nimport App from './App';\nimport './App.css';\n\nexport default App;\n\nReactDOM.render(\n  <React.StrictMode>\n    <StoreProvider>\n      <App />\n    </StoreProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}